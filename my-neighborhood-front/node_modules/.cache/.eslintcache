[{"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/reportWebVitals.js":"1","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/index.tsx":"2","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/App.tsx":"3","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/SignUp.tsx":"4","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/InputFile.tsx":"5","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Header.tsx":"6","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/TextInput.tsx":"7","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/setBody.ts":"8","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/ButtonClick.tsx":"9","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/SignIn.tsx":"10","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/authService.ts":"11","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/callerService.ts":"12","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/CreateRequest.tsx":"13","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/models.ts":"14","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/authRequestApi.ts":"15","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/requestApi.ts":"16","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/requestService.ts":"17","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/governmentIdentityService.ts":"18","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Home.tsx":"19","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Map.tsx":"20","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Label.tsx":"21","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/useRedirectToSignInPage.ts":"22","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Chatbox.tsx":"23","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RecipientItem.tsx":"24","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/volunteerService.ts":"25","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/userService.ts":"26","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/chatMessageService.ts":"27","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RequestDrawer.tsx":"28","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/FulFillRequestPopin.tsx":"29","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RequestMarker.tsx":"30","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/apiModels.ts":"31","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Message.tsx":"32","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/MyRequests.tsx":"33","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RepublishRequest.tsx":"34"},{"size":362,"mtime":1685714205075,"results":"35","hashOfConfig":"36"},{"size":535,"mtime":1690015980585,"results":"37","hashOfConfig":"36"},{"size":786,"mtime":1694434464221,"results":"38","hashOfConfig":"36"},{"size":5854,"mtime":1694403070921,"results":"39","hashOfConfig":"36"},{"size":2896,"mtime":1694403256183,"results":"40","hashOfConfig":"36"},{"size":8147,"mtime":1694434653039,"results":"41","hashOfConfig":"36"},{"size":1157,"mtime":1694269840447,"results":"42","hashOfConfig":"36"},{"size":120,"mtime":1690472379738,"results":"43","hashOfConfig":"36"},{"size":1217,"mtime":1694269439559,"results":"44","hashOfConfig":"36"},{"size":3953,"mtime":1694394072368,"results":"45","hashOfConfig":"36"},{"size":1113,"mtime":1694540471662,"results":"46","hashOfConfig":"36"},{"size":394,"mtime":1693778128339,"results":"47","hashOfConfig":"36"},{"size":5875,"mtime":1693853812801,"results":"48","hashOfConfig":"36"},{"size":1338,"mtime":1694440055584,"results":"49","hashOfConfig":"36"},{"size":476,"mtime":1690487518287,"results":"50","hashOfConfig":"36"},{"size":417,"mtime":1693471414441,"results":"51","hashOfConfig":"36"},{"size":814,"mtime":1694555842463,"results":"52","hashOfConfig":"36"},{"size":371,"mtime":1691172351681,"results":"53","hashOfConfig":"36"},{"size":477,"mtime":1693459572241,"results":"54","hashOfConfig":"36"},{"size":3772,"mtime":1694438115032,"results":"55","hashOfConfig":"36"},{"size":834,"mtime":1693847558273,"results":"56","hashOfConfig":"36"},{"size":311,"mtime":1694125423480,"results":"57","hashOfConfig":"36"},{"size":9318,"mtime":1694439679847,"results":"58","hashOfConfig":"36"},{"size":1199,"mtime":1694037640564,"results":"59","hashOfConfig":"36"},{"size":192,"mtime":1693803403691,"results":"60","hashOfConfig":"36"},{"size":257,"mtime":1694125117164,"results":"61","hashOfConfig":"36"},{"size":306,"mtime":1694078810233,"results":"62","hashOfConfig":"36"},{"size":2482,"mtime":1693987069537,"results":"63","hashOfConfig":"36"},{"size":2347,"mtime":1693860988212,"results":"64","hashOfConfig":"36"},{"size":1119,"mtime":1693948374957,"results":"65","hashOfConfig":"36"},{"size":177,"mtime":1694103107692,"results":"66","hashOfConfig":"36"},{"size":1356,"mtime":1694296747058,"results":"67","hashOfConfig":"36"},{"size":2546,"mtime":1694598940227,"results":"68","hashOfConfig":"36"},{"size":1682,"mtime":1694598920727,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"11sk8om",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"77"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/reportWebVitals.js",[],[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/index.tsx",[],[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/App.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/SignUp.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/InputFile.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Header.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/TextInput.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/setBody.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/ButtonClick.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/SignIn.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/authService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/callerService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/CreateRequest.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/models.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/authRequestApi.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/requestApi.ts",[],[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/requestService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/governmentIdentityService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Home.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Map.tsx",["178"],[],"import { GoogleMap } from '@react-google-maps/api';\nimport { useEffect, useState } from 'react';\nimport { requestService } from './requestService';\nimport { ChatMessagePost, MessageType, RequestGet, User } from './models';\nimport { useNavigate } from 'react-router-dom';\nimport { volunteerService } from './volunteerService';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { userService } from './userService';\nimport { RequestMarker } from './RequestMarker';\nimport { currentUserId, headers } from './apiModels';\nimport makeStyles from '@mui/styles/makeStyles/makeStyles';\n\nvar stompClient = null;\nlet initialValue = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  address: '',\n  governmentIdentityId: '',\n  profilePictureId: ''\n};\n\nlet MINUTE_MS = 30000;\n\nexport const Map = () => {\n  const [latitude, setLatitude] = useState<number>();\n  const [longitude, setLongitude] = useState<number>();\n  const [requests, setRequests] = useState<RequestGet[]>([]);\n  const [user, setUser] = useState<User>(initialValue);\n  const [unfulfilledNumber, setUnfulfilledNumber] = useState(0);\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const getUnfulfilledRequest = () => {\n    requestService\n      .getRequestsNumber()\n      .then((res) => res.data)\n      .then((result) => {\n        setUnfulfilledNumber(result);\n      });\n  };\n\n  useEffect(() => {\n    getUnfulfilledRequest();\n    const interval = setInterval(() => {\n      getUnfulfilledRequest();\n    }, MINUTE_MS);\n    return () => clearInterval(interval);\n  }, [requestService]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n\n  useEffect(() => {\n    userService\n      .getUserById(currentUserId)\n      .then((res) => res.data)\n      .then((result) => setUser(result));\n  }, []);\n\n  useEffect(() => {\n    requestService\n      .getRequests()\n      .then((res) => res.data)\n      .then((result) => setRequests(result));\n  }, []);\n\n  const center = { lat: latitude, lng: longitude };\n\n  const sendPrivateValue = (event, request: RequestGet, message: string) => {\n    event.preventDefault();\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    if (stompClient) {\n      var chatMessage: ChatMessagePost = {\n        sender: user,\n        recipient: request.requester,\n        content: message,\n        messageType: MessageType.CHAT,\n        flow:\n          user.id < request.requester.id\n            ? user.id + '/' + request.requester.id\n            : request.requester.id + '/' + user.id\n      };\n      stompClient.send(\n        '/myNeighborhood/private-message',\n        headers,\n        JSON.stringify(chatMessage)\n      );\n    }\n    helpRequest(request.id);\n  };\n\n  const helpRequest = (requestId: string) => {\n    volunteerService\n      .createVolunteer(requestId)\n      .then(() => redirectChatboxPage());\n  };\n\n  const redirectChatboxPage = () => {\n    navigate('/chatbox');\n  };\n\n  return (\n    <GoogleMap\n      zoom={12}\n      center={center}\n      mapContainerStyle={{ width: '100%', height: '100vh' }}\n    >\n      <>\n        {requests &&\n          requests.map((request, index) => (\n            <RequestMarker\n              key={index}\n              request={request}\n              onSend={sendPrivateValue}\n            />\n          ))}\n        <div className={classes.number}>\n          {unfulfilledNumber} unfulfilled requests\n        </div>\n      </>\n    </GoogleMap>\n  );\n};\n\nconst useStyles = makeStyles({\n  number: {\n    position: 'absolute',\n    margin: '10vh 50vw 0',\n    backgroundColor: 'white',\n    padding: '18px',\n    borderRadius: '8px'\n  }\n});\n","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Label.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/useRedirectToSignInPage.ts",["179"],[],"import { authService } from './authService';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const useRedirectToSignInPage = () => {\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!authService.isLogged()) {\n      navigate('/signIn');\n    }\n  }, []);\n};\n","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Chatbox.tsx",["180","181"],[],"import { Header } from './Header';\nimport { CSSObject, Theme, styled } from '@mui/material/styles';\nimport MuiDrawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { useEffect, useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles/makeStyles';\nimport { useRedirectToSignInPage } from './useRedirectToSignInPage';\nimport { RecipientItem } from './RecipientItem';\nimport { Box, InputAdornment } from '@mui/material';\nimport { ButtonClick } from './ButtonClick';\nimport { ChatMessageGet, ChatMessagePost, MessageType, User } from './models';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { TextInput } from './TextInput';\nimport { chatMessageService } from './chatMessageService';\nimport { userService } from './userService';\nimport { currentUserId, headers } from './apiModels';\nimport { Message } from './Message';\nimport setBodyColor from './setBody';\n\nconst drawerWidth = 240;\nvar stompClient = null;\n\nlet initialValue = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  address: '',\n  governmentIdentityId: '',\n  profilePictureId: ''\n};\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar\n}));\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: 'hidden'\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(8)} + 1px)`\n  }\n});\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== 'open'\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: 'nowrap',\n  boxSizing: 'border-box',\n  ...(open && {\n    ...openedMixin(theme),\n    '& .MuiDrawer-paper': openedMixin(theme)\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    '& .MuiDrawer-paper': closedMixin(theme)\n  })\n}));\n\nexport const Chatbox = () => {\n  const classes = useStyles();\n  useRedirectToSignInPage();\n  setBodyColor({ color: '#DDFFF7' });\n\n  const [open, setOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [message, setMessage] = useState('');\n  const [latestMessages, setLatestMessages] = useState<ChatMessageGet[]>([]);\n  const [privateChats, setPrivateChats] = useState<ChatMessageGet[]>([]);\n  const [tab, setTab] = useState('');\n  const [sender, setSender] = useState<User>(initialValue);\n  const [recipient, setRecipient] = useState<User>(initialValue);\n\n  useEffect(() => {\n    connect();\n    return () => console.log('disconnect');\n  }, []);\n\n  useEffect(() => {\n    chatMessageService\n      .getLatestChatMessagesForSender()\n      .then((res) => res.data)\n      .then((result) => setLatestMessages(result));\n  }, [privateChats]);\n\n  useEffect(() => {\n    userService\n      .getUserById(currentUserId)\n      .then((res) => res.data)\n      .then((result) => setSender(result));\n  }, []);\n\n  const onConnected = () => {\n    stompClient.subscribe('/chatroom/public', {});\n    stompClient.subscribe(\n      '/user/' + currentUserId + '/private',\n      onPrivateMessage\n    );\n  };\n\n  const onError = (error) => {\n    console.log(error);\n  };\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const handleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const handleMessage = (event) => {\n    const { value } = event.target;\n    setMessage(value);\n  };\n\n  const handleTab = (recipientId: string, key: number) => {\n    setTab(recipientId);\n    setSelectedIndex(key);\n    chatMessageService\n      .getChatFlow(recipientId)\n      .then((res) => res.data)\n      .then((result) => {\n        setPrivateChats(result);\n      });\n    userService\n      .getUserById(recipientId)\n      .then((res) => res.data)\n      .then((result) => {\n        setRecipient(result);\n      });\n  };\n\n  const emptyMessage = () => {\n    setMessage('');\n  };\n\n  const sendPrivateValue = (event) => {\n    event.preventDefault();\n    if (stompClient && message !== '') {\n      var chatMessagePost: ChatMessagePost = {\n        sender: sender,\n        recipient: recipient,\n        content: message,\n        flow:\n          sender.id < recipient.id\n            ? sender.id + '/' + recipient.id\n            : recipient.id + '/' + sender.id,\n        messageType: MessageType.CHAT\n      };\n      stompClient.send(\n        '/myNeighborhood/private-message',\n        {},\n        JSON.stringify(chatMessagePost)\n      );\n      let chatMessageGet: ChatMessageGet = {\n        sender: sender,\n        recipient: recipient,\n        content: message,\n        messageType: MessageType.CHAT,\n        date: new Date()\n      };\n      emptyMessage();\n      setPrivateChats([...privateChats, chatMessageGet]);\n    }\n  };\n\n  const onPrivateMessage = (payload) => {\n    console.log(payload.body);\n    console.log(privateChats);\n    var messageData = JSON.parse(payload.body);\n    let chatMessage: ChatMessageGet = {\n      sender: messageData.sender,\n      recipient: messageData.recipient,\n      content: messageData.content,\n      messageType: messageData.messageType,\n      date: new Date()\n    };\n    setPrivateChats([...privateChats, chatMessage]);\n  };\n\n  const onKeyDown = (event) => {\n    if (event.key === 13) {\n      sendPrivateValue(event);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className={classes.chatbox}>\n        <Drawer\n          variant=\"permanent\"\n          open={open}\n          anchor=\"left\"\n          classes={{ paper: classes.paper }}\n        >\n          <div className={classes.content}>\n            <DrawerHeader>\n              <IconButton onClick={handleDrawer}>\n                {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </DrawerHeader>\n            <Divider />\n            <List>\n              {latestMessages ? (\n                latestMessages.map((lastMessage, key) => (\n                  <RecipientItem\n                    key={key}\n                    primary={\n                      lastMessage.sender.id === currentUserId\n                        ? lastMessage.recipient.firstname\n                        : lastMessage.sender.firstname\n                    }\n                    secondary={lastMessage.content}\n                    open={open}\n                    onClick={() =>\n                      handleTab(\n                        lastMessage.sender.id === currentUserId\n                          ? lastMessage.recipient.id\n                          : lastMessage.sender.id,\n                        key\n                      )\n                    }\n                    selected={selectedIndex === key}\n                  />\n                ))\n              ) : (\n                <div>Fulfill a request</div>\n              )}\n            </List>\n          </div>\n        </Drawer>\n        {tab && (\n          <Box className={classes.conversation}>\n            <ul className={classes.messageFlow}>\n              {privateChats &&\n                privateChats.map((chat, index) => (\n                  <ul className={classes.messageList}>\n                    <Message key={index} chatMessage={chat} />\n                  </ul>\n                ))}\n            </ul>\n            <div>\n              <TextInput\n                placeholder=\"Type your message here...\"\n                type=\"text\"\n                variant=\"outlined\"\n                onChange={handleMessage}\n                onKeyDown={onKeyDown}\n                fullwidth\n                value={message}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <ButtonClick\n                        type=\"submit\"\n                        variant=\"contained\"\n                        backgroundColor=\"#FFA69E\"\n                        onClick={sendPrivateValue}\n                      >\n                        Send\n                      </ButtonClick>\n                    </InputAdornment>\n                  )\n                }}\n              />\n            </div>\n          </Box>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  chatbox: {\n    display: 'flex'\n  },\n  paper: {\n    zIndex: '80 !important'\n  },\n  content: {\n    marginTop: '65px'\n  },\n  conversation: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    margin: '80px',\n    padding: '22px',\n    height: '700px',\n    zIndex: '80 !important',\n    backgroundColor: 'white',\n    overflowY: 'scroll'\n  },\n  messageFlow: {\n    flexGrow: 1,\n    overflow: 'auto'\n  },\n  messageList: {\n    listStyle: 'none'\n  }\n});\n","/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RecipientItem.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/volunteerService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/userService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/chatMessageService.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RequestDrawer.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/FulFillRequestPopin.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RequestMarker.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/apiModels.ts",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Message.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/MyRequests.tsx",[],[],"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/RepublishRequest.tsx",[],[],{"ruleId":"182","severity":1,"message":"183","line":53,"column":6,"nodeType":"184","endLine":53,"endColumn":22,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"186","line":11,"column":6,"nodeType":"184","endLine":11,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":21,"column":25,"nodeType":"190","messageId":"191","endLine":21,"endColumn":32},{"ruleId":"182","severity":1,"message":"192","line":102,"column":6,"nodeType":"184","endLine":102,"endColumn":8,"suggestions":"193"},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'requestService'. Either exclude it or remove the dependency array. Outer scope values like 'requestService' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["194"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["195"],"@typescript-eslint/no-unused-vars","'headers' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'connect'. Either include it or remove the dependency array.",["196"],{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: []",{"range":"203","text":"204"},"Update the dependencies array to be: [navigate]",{"range":"205","text":"206"},"Update the dependencies array to be: [connect]",{"range":"207","text":"208"},[1585,1601],"[]",[303,305],"[navigate]",[3244,3246],"[connect]"]