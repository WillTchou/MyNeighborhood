{"ast":null,"code":"export let Type = /*#__PURE__*/function (Type) {\n  Type[\"OneTimeTask\"] = \"One-time task\";\n  Type[\"MaterialNeed\"] = \"Material need\";\n  return Type;\n}({});\nexport let Status = /*#__PURE__*/function (Status) {\n  Status[\"Fulfilled\"] = \"Fulfilled\";\n  Status[\"Unfulfilled\"] = \"Unfulfilled\";\n  return Status;\n}({});\nexport let MessageType = /*#__PURE__*/function (MessageType) {\n  MessageType[\"CHAT\"] = \"CHAT\";\n  MessageType[\"JOIN\"] = \"JOIN\";\n  MessageType[\"LEAVE\"] = \"LEAVE\";\n  return MessageType;\n}({});","map":{"version":3,"names":["Type","Status","MessageType"],"sources":["/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/models.ts"],"sourcesContent":["export type RegisterRequest = {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  address: string;\n  governmentIdentityId: string;\n};\n\nexport type AuthRequest = {\n  email: string;\n  password: string;\n};\n\nexport type Request = {\n  type: Type;\n  latitude: number;\n  longitude: number;\n  description: string;\n  status?: Status;\n};\n\nexport type ChatMessage={\n  userId:string,\n  recipientId:string,\n  content:string,\n  connected:boolean\n}\n\nexport enum Type {\n  OneTimeTask = 'One-time task',\n  MaterialNeed = 'Material need'\n}\n\nexport enum Status {\n  Fulfilled = 'Fulfilled',\n  Unfulfilled = 'Unfulfilled'\n}\n\nexport enum MessageType{\n  CHAT='CHAT',\n  JOIN='JOIN',\n  LEAVE='LEAVE'\n}\n"],"mappings":"AA6BA,WAAYA,IAAI,0BAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAA,OAAJA,IAAI;AAAA;AAKhB,WAAYC,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA;AAKlB,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}