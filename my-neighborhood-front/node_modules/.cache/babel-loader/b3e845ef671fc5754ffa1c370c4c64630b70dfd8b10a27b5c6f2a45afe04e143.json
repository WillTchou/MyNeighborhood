{"ast":null,"code":"var _jsxFileName = \"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, MarkerF } from '@react-google-maps/api';\nimport { useEffect, useState } from 'react';\nimport { requestService } from './requestService';\nimport { TypeEnum } from './models';\nimport { useNavigate } from 'react-router-dom';\nimport { volunteerService } from './volunteerService';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { userService } from './userService';\nimport { authService } from './authService';\nimport { RequestDrawer } from './RequestDrawer';\nimport { ClickAwayListener } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nlet initialValue = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  address: '',\n  governmentIdentityId: '',\n  profilePicture: ''\n};\nconst headers = {\n  Authorization: 'Bearer ' + authService.getToken()\n};\nexport const Map = () => {\n  _s();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [requests, setRequests] = useState([]);\n  const [openSideBar, setOpenSideBar] = useState(false);\n  const [user, setUser] = useState(initialValue);\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n  useEffect(() => {\n    connect();\n    userService.getUserById(localStorage.getItem('userId')).then(res => res.data).then(result => setUser(result));\n  }, []);\n  useEffect(() => {\n    requestService.getRequests().then(res => res.data).then(result => setRequests(result));\n  }, []);\n  const center = {\n    lat: latitude,\n    lng: longitude\n  };\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect(headers, onConnected, onError);\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const onConnected = () => {\n    if (stompClient.status === 'CONNECTED') {\n      stompClient.subscribe('/chatroom/public', {});\n      stompClient.subscribe('/user/' + authService.getUserId() + '/private', {});\n    }\n  };\n  const sendPrivateValue = (event, request, message) => {\n    event.preventDefault();\n    if (stompClient) {\n      var chatMessage = {\n        sender: user,\n        recipient: request.requester,\n        content: message,\n        messageType: 'CHAT'\n      };\n      stompClient.send('/myNeighborhood/private-message', headers, JSON.stringify(chatMessage));\n    }\n    helpRequest(request.id);\n  };\n  const toggleDrawer = () => {\n    setOpenSideBar(prev => !prev);\n  };\n  const onClose = () => {\n    console.log(openSideBar);\n    setOpenSideBar(false);\n  };\n  const helpRequest = requestId => {\n    volunteerService.createVolunteer(requestId).then(() => redirectChatboxPage());\n  };\n  const redirectChatboxPage = () => {\n    navigate('/chatbox');\n  };\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: onClose,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      zoom: 12,\n      center: center,\n      mapContainerStyle: {\n        width: '100%',\n        height: '100vh'\n      },\n      children: requests && requests.map((request, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: request.latitude,\n            lng: request.longitude\n          },\n          onClick: toggleDrawer,\n          icon: TypeEnum[request.type] === TypeEnum.MaterialNeed ? 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(RequestDrawer, {\n          open: openSideBar,\n          onClose: onClose,\n          request: request,\n          onSend: sendPrivateValue\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"VKZMF5nPWlHG0lYy8kz0N2cGgSI=\", false, function () {\n  return [useNavigate];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","MarkerF","useEffect","useState","requestService","TypeEnum","useNavigate","volunteerService","over","SockJS","userService","authService","RequestDrawer","ClickAwayListener","jsxDEV","_jsxDEV","Fragment","_Fragment","stompClient","initialValue","id","firstname","lastname","email","password","address","governmentIdentityId","profilePicture","headers","Authorization","getToken","Map","_s","latitude","setLatitude","longitude","setLongitude","requests","setRequests","openSideBar","setOpenSideBar","user","setUser","navigate","navigator","geolocation","getCurrentPosition","position","coords","connect","getUserById","localStorage","getItem","then","res","data","result","getRequests","center","lat","lng","Sock","onConnected","onError","err","console","log","status","subscribe","getUserId","sendPrivateValue","event","request","message","preventDefault","chatMessage","sender","recipient","requester","content","messageType","send","JSON","stringify","helpRequest","toggleDrawer","prev","onClose","requestId","createVolunteer","redirectChatboxPage","onClickAway","children","zoom","mapContainerStyle","width","height","map","index","onClick","icon","type","MaterialNeed","fileName","_jsxFileName","lineNumber","columnNumber","open","onSend","_c","$RefreshReg$"],"sources":["/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Map.tsx"],"sourcesContent":["import { GoogleMap, MarkerF } from '@react-google-maps/api';\nimport { useEffect, useState } from 'react';\nimport { requestService } from './requestService';\nimport { ChatMessagePost, RequestGet, TypeEnum, User } from './models';\nimport { useNavigate } from 'react-router-dom';\nimport { volunteerService } from './volunteerService';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { userService } from './userService';\nimport { authService } from './authService';\nimport { RequestDrawer } from './RequestDrawer';\nimport { ClickAwayListener } from '@mui/material';\n\nvar stompClient = null;\nlet initialValue = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  address: '',\n  governmentIdentityId: '',\n  profilePicture: ''\n};\nconst headers = {\n  Authorization: 'Bearer ' + authService.getToken()\n};\n\nexport const Map = () => {\n  const [latitude, setLatitude] = useState<number>();\n  const [longitude, setLongitude] = useState<number>();\n  const [requests, setRequests] = useState<RequestGet[]>([]);\n  const [openSideBar, setOpenSideBar] = useState(false);\n  const [user, setUser] = useState<User>(initialValue);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n\n  useEffect(() => {\n    connect();\n    userService\n      .getUserById(localStorage.getItem('userId'))\n      .then((res) => res.data)\n      .then((result) => setUser(result));\n  }, []);\n\n  useEffect(() => {\n    requestService\n      .getRequests()\n      .then((res) => res.data)\n      .then((result) => setRequests(result));\n  }, []);\n\n  const center = { lat: latitude, lng: longitude };\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect(headers, onConnected, onError);\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const onConnected = () => {\n    if (stompClient.status === 'CONNECTED') {\n      stompClient.subscribe('/chatroom/public', {});\n      stompClient.subscribe(\n        '/user/' + authService.getUserId() + '/private',\n        {}\n      );\n    }\n  };\n\n  const sendPrivateValue = (event, request: RequestGet, message: string) => {\n    event.preventDefault();\n    if (stompClient) {\n      var chatMessage: ChatMessagePost = {\n        sender: user,\n        recipient: request.requester,\n        content: message,\n        messageType: 'CHAT'\n      };\n      stompClient.send(\n        '/myNeighborhood/private-message',\n        headers,\n        JSON.stringify(chatMessage)\n      );\n    }\n    helpRequest(request.id);\n  };\n\n  const toggleDrawer = () => {\n    setOpenSideBar((prev) => !prev);\n  };\n\n  const onClose = () => {\n    console.log(openSideBar);\n    setOpenSideBar(false);\n  };\n\n  const helpRequest = (requestId: string) => {\n    volunteerService\n      .createVolunteer(requestId)\n      .then(() => redirectChatboxPage());\n  };\n\n  const redirectChatboxPage = () => {\n    navigate('/chatbox');\n  };\n\n  return (\n    <ClickAwayListener onClickAway={onClose}>\n      <GoogleMap\n        zoom={12}\n        center={center}\n        mapContainerStyle={{ width: '100%', height: '100vh' }}\n      >\n        {requests &&\n          requests.map((request, index) => (\n            <>\n              <MarkerF\n                key={index}\n                position={{ lat: request.latitude, lng: request.longitude }}\n                onClick={toggleDrawer}\n                icon={\n                  TypeEnum[request.type] === TypeEnum.MaterialNeed\n                    ? 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                    : 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\n                }\n              />\n              <RequestDrawer\n                key={index}\n                open={openSideBar}\n                onClose={onClose}\n                request={request}\n                onSend={sendPrivateValue}\n              />\n            </>\n          ))}\n      </GoogleMap>\n    </ClickAwayListener>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}