{"ast":null,"code":"var _jsxFileName = \"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap } from '@react-google-maps/api';\nimport { useEffect, useState } from 'react';\nimport { requestService } from './requestService';\nimport { MessageType } from './models';\nimport { useNavigate } from 'react-router-dom';\nimport { volunteerService } from './volunteerService';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { userService } from './userService';\nimport { authService } from './authService';\nimport { RequestMarker } from './RequestMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nlet initialValue = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  address: '',\n  governmentIdentityId: '',\n  profilePicture: ''\n};\nconst headers = {\n  Authorization: 'Bearer ' + authService.getToken()\n};\nexport const Map = () => {\n  _s();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [requests, setRequests] = useState([]);\n  const [user, setUser] = useState(initialValue);\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n  useEffect(() => {\n    connect();\n    userService.getUserById(localStorage.getItem('userId')).then(res => res.data).then(result => setUser(result));\n  }, []);\n  useEffect(() => {\n    requestService.getRequests().then(res => res.data).then(result => setRequests(result));\n  }, []);\n  const center = {\n    lat: latitude,\n    lng: longitude\n  };\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const onConnected = () => {\n    if (stompClient.status === 'CONNECTED') {\n      stompClient.subscribe('/chatroom/public', {});\n      stompClient.subscribe('/user/' + authService.getUserId() + '/private', {});\n    }\n  };\n  const sendPrivateValue = (event, request, message) => {\n    event.preventDefault();\n    if (stompClient) {\n      var chatMessage = {\n        sender: user,\n        recipient: request.requester,\n        content: message,\n        messageType: MessageType.CHAT\n      };\n      stompClient.send('/myNeighborhood/private-message', headers, JSON.stringify(chatMessage));\n    }\n    helpRequest(request.id);\n  };\n  const helpRequest = requestId => {\n    volunteerService.createVolunteer(requestId).then(() => redirectChatboxPage());\n  };\n  const redirectChatboxPage = () => {\n    navigate('/chatbox');\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: 12,\n    center: center,\n    mapContainerStyle: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: requests && requests.map((request, index) => /*#__PURE__*/_jsxDEV(RequestMarker, {\n      request: request,\n      onSend: sendPrivateValue\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"EQHEVCn1ARgTRnCDKm3jEQ7taiA=\", false, function () {\n  return [useNavigate];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMap","useEffect","useState","requestService","MessageType","useNavigate","volunteerService","over","SockJS","userService","authService","RequestMarker","jsxDEV","_jsxDEV","stompClient","initialValue","id","firstname","lastname","email","password","address","governmentIdentityId","profilePicture","headers","Authorization","getToken","Map","_s","latitude","setLatitude","longitude","setLongitude","requests","setRequests","user","setUser","navigate","navigator","geolocation","getCurrentPosition","position","coords","connect","getUserById","localStorage","getItem","then","res","data","result","getRequests","center","lat","lng","Sock","onConnected","onError","err","console","log","status","subscribe","getUserId","sendPrivateValue","event","request","message","preventDefault","chatMessage","sender","recipient","requester","content","messageType","CHAT","send","JSON","stringify","helpRequest","requestId","createVolunteer","redirectChatboxPage","zoom","mapContainerStyle","width","height","children","map","index","onSend","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/Map.tsx"],"sourcesContent":["import { GoogleMap } from '@react-google-maps/api';\nimport { useEffect, useState } from 'react';\nimport { requestService } from './requestService';\nimport { ChatMessagePost, MessageType, RequestGet, User } from './models';\nimport { useNavigate } from 'react-router-dom';\nimport { volunteerService } from './volunteerService';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { userService } from './userService';\nimport { authService } from './authService';\nimport { RequestMarker } from './RequestMarker';\n\nvar stompClient = null;\nlet initialValue = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  address: '',\n  governmentIdentityId: '',\n  profilePicture: ''\n};\nconst headers = {\n  Authorization: 'Bearer ' + authService.getToken()\n};\n\nexport const Map = () => {\n  const [latitude, setLatitude] = useState<number>();\n  const [longitude, setLongitude] = useState<number>();\n  const [requests, setRequests] = useState<RequestGet[]>([]);\n  const [user, setUser] = useState<User>(initialValue);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n\n  useEffect(() => {\n    connect();\n    userService\n      .getUserById(localStorage.getItem('userId'))\n      .then((res) => res.data)\n      .then((result) => setUser(result));\n  }, []);\n\n  useEffect(() => {\n    requestService\n      .getRequests()\n      .then((res) => res.data)\n      .then((result) => setRequests(result));\n  }, []);\n\n  const center = { lat: latitude, lng: longitude };\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const onConnected = () => {\n    if (stompClient.status === 'CONNECTED') {\n      stompClient.subscribe('/chatroom/public', {});\n      stompClient.subscribe(\n        '/user/' + authService.getUserId() + '/private',\n        {}\n      );\n    }\n  };\n\n  const sendPrivateValue = (event, request: RequestGet, message: string) => {\n    event.preventDefault();\n    if (stompClient) {\n      var chatMessage: ChatMessagePost = {\n        sender: user,\n        recipient: request.requester,\n        content: message,\n        messageType: MessageType.CHAT\n      };\n      stompClient.send(\n        '/myNeighborhood/private-message',\n        headers,\n        JSON.stringify(chatMessage)\n      );\n    }\n    helpRequest(request.id);\n  };\n\n  const helpRequest = (requestId: string) => {\n    volunteerService\n      .createVolunteer(requestId)\n      .then(() => redirectChatboxPage());\n  };\n\n  const redirectChatboxPage = () => {\n    navigate('/chatbox');\n  };\n\n  return (\n    <GoogleMap\n      zoom={12}\n      center={center}\n      mapContainerStyle={{ width: '100%', height: '100vh' }}\n    >\n      {requests &&\n        requests.map((request, index) => (\n          <RequestMarker\n            key={index}\n            request={request}\n            onSend={sendPrivateValue}\n          />\n        ))}\n    </GoogleMap>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}