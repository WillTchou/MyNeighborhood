{"ast":null,"code":"var _jsxFileName = \"/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/InputFile.tsx\",\n  _s = $RefreshSig$();\nimport { makeStyles } from \"@mui/styles\";\nimport CloudUpload from \"@mui/icons-material/CloudUpload\";\nimport CloudDoneIcon from \"@mui/icons-material/CloudDone\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputFile = _ref => {\n  _s();\n  let {\n    accept,\n    file,\n    onChange\n  } = _ref;\n  const classes = useStyles();\n  const [fileName, setFileName] = useState(\"No selected file\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    style: {\n      backgroundColor: \"#93E1D8\"\n    },\n    className: classes.inputFile,\n    onClick: () => {\n      let element = document.getElementsByClassName(\"input-field\")[0];\n      element.click();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      accept: accept,\n      type: \"file\",\n      className: \"input-field\",\n      hidden: true,\n      onChange: _ref2 => {\n        let {\n          target: {\n            files\n          }\n        } = _ref2;\n        files[0] && setFileName(files[0].name);\n        if (files) {\n          onChange(URL.createObjectURL(files[0]));\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), file ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CloudDoneIcon, {\n        sx: {\n          fontSize: 60\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CloudUpload, {\n        sx: {\n          fontSize: 60\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Browse a file to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(InputFile, \"ZWmQsj5aIwNkbjMNI5iq1UgS+0g=\", false, function () {\n  return [useStyles];\n});\n_c = InputFile;\nconst useStyles = makeStyles({\n  inputFile: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    height: \"200px\",\n    width: \"300px\",\n    border: \"3px dashed #FFA69E\",\n    borderRadius: \"5px\"\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"InputFile\");","map":{"version":3,"names":["makeStyles","CloudUpload","CloudDoneIcon","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","InputFile","_ref","_s","accept","file","onChange","classes","useStyles","fileName","setFileName","action","style","backgroundColor","className","inputFile","onClick","element","document","getElementsByClassName","click","children","type","hidden","_ref2","target","files","name","URL","createObjectURL","_jsxFileName","lineNumber","columnNumber","sx","fontSize","_c","display","justifyContent","alignItems","cursor","height","width","border","borderRadius","$RefreshReg$"],"sources":["/Users/willsbball/Desktop/Wilfried/Work/My-Neighborhood/my-neighborhood-front/src/InputFile.tsx"],"sourcesContent":["import { makeStyles } from \"@mui/styles\";\nimport CloudUpload from \"@mui/icons-material/CloudUpload\";\nimport CloudDoneIcon from \"@mui/icons-material/CloudDone\";\nimport { useState } from \"react\";\n\ntype InputFileProps = {\n  accept: string;\n  file: string;\n  onChange: (value) => void;\n};\n\nexport const InputFile = ({ accept, file, onChange }: InputFileProps) => {\n  const classes = useStyles();\n  const [fileName, setFileName] = useState(\"No selected file\");\n\n  return (\n    <form\n      action=\"\"\n      style={{ backgroundColor: \"#93E1D8\" }}\n      className={classes.inputFile}\n      onClick={() => {\n        let element: HTMLElement = document.getElementsByClassName(\n          \"input-field\"\n        )[0] as HTMLElement;\n        element.click();\n      }}\n    >\n      <input\n        accept={accept}\n        type=\"file\"\n        className=\"input-field\"\n        hidden\n        onChange={({ target: { files } }) => {\n          files[0] && setFileName(files[0].name);\n          if (files) {\n            onChange(URL.createObjectURL(files[0]));\n          }\n        }}\n      />\n      {file ? (\n        <>\n          <CloudDoneIcon sx={{ fontSize: 60 }} />\n          <span>{file}</span>\n        </>\n      ) : (\n        <>\n          <CloudUpload sx={{ fontSize: 60 }} />\n          <span>Browse a file to upload</span>\n        </>\n      )}\n    </form>\n  );\n};\n\nconst useStyles = makeStyles({\n  inputFile: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    height: \"200px\",\n    width: \"300px\",\n    border: \"3px dashed #FFA69E\",\n    borderRadius: \"5px\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}